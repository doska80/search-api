version: 2
jobs:
  install_jdk11:
    machine:
      image: circleci/classic:latest
    steps:
      - restore_cache:
          key: jdk11
      - run: |
          JAVA_HOME=$PWD/jdk-11.0.1
          JDK_TAR_FILE=jdk-11.0.1.tar.gz
          [ -d $JAVA_HOME ] || ( curl https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.1_linux-x64_bin.tar.gz --output $JDK_TAR_FILE && tar -xvf $JDK_TAR_FILE )
      - save_cache:
          key: jdk11
          paths:
            - jdk-11.0.1
  run_tests:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - run:
          name: Syncing and updating Git Submodules
          command: git submodule sync --recursive && git submodule update --init --recursive

      - restore_cache:
          key: search-api-{{ checksum "gradle.properties" }}-{{ checksum "build.gradle" }}

      - restore_cache:
          key: jdk11

      - run:
          name: Docker Login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run:
          name: Building image and running tests
          no_output_timeout: 20m
          command: export JAVA_HOME=$PWD/jdk-11.0.1 && export PATH=$JAVA_HOME/bin:$PATH && make GRADLE_EXTRA_ARGS=--scan build

      - save_cache:
          key: search-api-{{ checksum "gradle.properties" }}-{{ checksum "build.gradle" }}
          paths:
            - ~/.m2
            - ~/.gradle

  build_image:
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - run:
          name: Syncing and updating Git Submodules
          command: git submodule sync --recursive && git submodule update --init --recursive

      - restore_cache:
          key: search-api-{{ checksum "gradle.properties" }}-{{ checksum "build.gradle" }}

      - restore_cache:
          key: jdk11

      - run:
          name: Docker Login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run:
          name: Updating apt-get
          command: sudo apt-get update

      - run:
          name: Openning CircleCI Tunnel
          command: aws s3 cp s3://develop-br/scripts/circleci/circleci-tunnel.sh ~/ && chmod +x ~/circleci-tunnel.sh && nohup ~/circleci-tunnel.sh start > /dev/null

      - run:
          name: Pushing image and sending notification to Slack
          command: export JAVA_HOME=$PWD/jdk-11.0.1 && export PATH=$JAVA_HOME/bin:$PATH && make ENV=qa SLK_TOKEN=$SLK_TOKEN GRADLE_EXTRA_ARGS="-x test" push-with-notification compile-test sonarqube

workflows:
  version: 2
  test-build:
    jobs:
      - install_jdk11
      - run_tests:
          context: build-context
          requires:
            - install_jdk11
          filters:
            branches:
              ignore:
                - master
      - build_image:
          context: build-context
          requires:
            - install_jdk11
          filters:
            branches:
              only:
                - master